@page "/UpdateCodeSnippet/{Id:int}"
@using CSMS.UseCases.CodeSnippets.CodeSnippetInterfaces;

@inject NavigationManager NavigationManager
@inject IViewCodeSnippetsByIdUseCase ViewCodeSnippetsByIdUseCase
@inject IUpdateCodeSnippetUseCase UpdateCodeSnippetUseCase

<h3>Update Code Snippet</h3>
<br />

<EditForm Model="codeSnippet" OnValidSubmit="SaveCodeSnippetAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Name</label>
        <InputText 
            id="name" 
            @bind-Value="codeSnippet.Name" 
            class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description"
                   @bind-Value="codeSnippet.Description" 
            class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="author">Author</label>
        <InputText id="author"
                   @bind-Value="codeSnippet.Author"
                   class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <InputText id="category"
                   @bind-Value="codeSnippet.Category"
                   class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="language">Language</label>
        <InputText id="language"
                   @bind-Value="codeSnippet.Language"
                   class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="code">Code</label>
        <InputTextArea id="code"
                   @bind-Value="codeSnippet.Code"
                   class="form-control">
        </InputTextArea>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
</EditForm>




@code {
    [Parameter]
    public int Id { get; set; }

    private CodeSnippet codeSnippet = new CodeSnippet();

    protected async override Task OnParametersSetAsync()
    {
        this.codeSnippet= await ViewCodeSnippetsByIdUseCase.ExecuteAsync(this.Id);
    }

    private async Task SaveCodeSnippetAsync()
    {
        await UpdateCodeSnippetUseCase.ExecuteAsync(this.codeSnippet);
        this.NavigationManager.NavigateTo("/CodeSnippets");

    }

    private void Cancel()
    {
        this.NavigationManager.NavigateTo("/CodeSnippets");
    }
}
